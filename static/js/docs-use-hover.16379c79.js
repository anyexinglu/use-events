(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"./docs/useHover.mdx":function(e,n,t){"use strict";t.r(n);var r=t("./node_modules/react/index.js"),o=t.n(r),a=t("./node_modules/@mdx-js/tag/dist/index.js"),s=t("./docs/examples.js");function m(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;m(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:n},o.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"usehover"}},"useHover"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { useHover } from 'use-events';\n")),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const Example = () => {\n  const [isHovered, bind] = useHover();\n\n  return (\n    <div {...bind}>\n      You are {isHovered ? 'hovering' : 'not hovering'} this div\n    </div>\n  );\n};\n")),o.a.createElement(s.d,null))}}}]);