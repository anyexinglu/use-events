(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./docs/useFocus.mdx":function(e,n,t){"use strict";t.r(n);var s=t("./node_modules/react/index.js"),o=t.n(s),a=t("./node_modules/@mdx-js/tag/dist/index.js"),r=(t("./node_modules/docz/dist/index.m.js"),t("./dist/use-events.esm.js"),t("./docs/examples.js"));function c(e,n){if(null==e)return{};var t,s,o=function(e,n){if(null==e)return{};var t,s,o={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;c(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:n},o.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"usefocus"}},"useFocus"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"import { useFocus } from 'use-events';\n")),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const Example = () => {\n  const [isFocused, bind] = useFocus();\n\n  return (\n    <div>\n      <input {...bind} placeholder=\"Focus me\" />\n      <div>You are {isFocused ? 'focusing' : 'not focusing'} the input</div>\n    </div>\n  );\n};\n")),o.a.createElement(r.b,null))}}}]);